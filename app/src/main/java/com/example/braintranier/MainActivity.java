package com.example.braintranier;

import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

import android.os.Bundle;
import android.os.CountDownTimer;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.Random;

// Brain Training game using two random numbers ranging from 1 to 21 and adding it
// together. Users can keep track of how many problems they can play with correct
// answers within 30 seconds. When the game is finished user can replay the game
// as much as they would prefer.
// Now let's rank who will be the best on simple math problem!

public class MainActivity extends AppCompatActivity {

    Button goButton;
    int locationOfCorrectAnswer;
    //create Array of answers that will be shown
    ArrayList<Integer> answers = new ArrayList<Integer>();
    TextView resultTextView;
    //keep track of score
    int score = 0;
    int numberOfQuestion = 0;
    TextView scoreTextView;
    TextView sumTextView;
    Button button0;
    Button button1;
    Button button2;
    Button button3;
    TextView timerTextView;
    Button playAgainButton;
    ConstraintLayout gameLayout;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        sumTextView = findViewById(R.id.sumTextView);
        button0 = findViewById(R.id.button0);
        button1 = findViewById(R.id.button1);
        button2 = findViewById(R.id.button2);
        button3 = findViewById(R.id.button3);

        resultTextView = findViewById(R.id.resultTextView);
        scoreTextView = findViewById(R.id.scoreTextView);
        goButton = findViewById(R.id.goButton);
        playAgainButton = findViewById(R.id.playAgain);
        timerTextView =findViewById(R.id.timerTextView);
        gameLayout = findViewById(R.id.gameLayout);

        //when game did not start yet ask the user to press the button to
        //start a game, rest of the function should be invisible
        goButton.setVisibility(View.VISIBLE);
        gameLayout.setVisibility(View.INVISIBLE);


    }

    //when user press the button, a new game will start
    //reset the game for the user
    public void playAgain(View view){
        score = 0;
        numberOfQuestion = 0;
        timerTextView.setText("30s");
        scoreTextView.setText(Integer.toString(score) + "/" + Integer.toString(numberOfQuestion));
        //reset new questions
        newQuestion();
        // delete play again button when it becomes a new game
        playAgainButton.setVisibility(View.INVISIBLE);
        // when the game is finished the question will not show anymore
        resultTextView.setText ("");
        //recreate a timer

        //create new countDownTimer when the app opens up
        new CountDownTimer(30100, 1000){

            @Override
            public void onTick(long l) {
                //update timer Textview _ display time remaining in milisec
                timerTextView.setText(String.valueOf((l / 1000 ) +"s"));
            }

            @Override
            public void onFinish() {
                //update user that the game is finished
                resultTextView.setText("Finish!!");
                //button will be shown
                playAgainButton.setVisibility(View.VISIBLE);
            }
        }.start();
    }

    // when user presses the button the text will show whether the answer is right or wrong
    public void chooseAnswer (View view){
        if(Integer.toString(locationOfCorrectAnswer).equals(view.getTag().toString())){
            resultTextView.setText("Correct!");
            score++;

        } else {
            resultTextView.setText("Wrong :(");
        }

        numberOfQuestion++;
        scoreTextView.setText(Integer.toString(score) + "/" + Integer.toString(numberOfQuestion));
        newQuestion();
    }

    // goButton _ when user clicks the button the button will disappear and allows the user
    // to start a game
    public void start(View view){
        goButton.setVisibility(View.INVISIBLE);
        playAgain(findViewById(R.id.timerTextView));
        // when play game, the game layout should be visible
        gameLayout.setVisibility(View.VISIBLE);
    }

    //update to a new game : new set of questions, new multiple choice, reset timer
    public void newQuestion(){
        // update questions what are going to be solved by the user
        //generated by a random number each time
        Random rand = new Random();

        int a = rand.nextInt(21);
        int b = rand.nextInt(21);

        sumTextView.setText(Integer.toString(a) + " + " + Integer.toString(b));

        //determine which box will be the correct answer
        locationOfCorrectAnswer = rand.nextInt(4);
        //need to clear the answwers so that there will be new set of answer
        answers.clear();
        for(int i = 0; i < 4; i++){
            if(locationOfCorrectAnswer == i){
                answers.add(a+b);
            } else {
                int wrongAnswer = rand.nextInt(40);
                // prevent situation where same answer appears twice
                while(wrongAnswer == a+b){
                    wrongAnswer = rand.nextInt(40);
                }
                answers.add(wrongAnswer);
            }
        }

        button0.setText(Integer.toString(answers.get(0)));
        button1.setText(Integer.toString(answers.get(1)));
        button2.setText(Integer.toString(answers.get(2)));
        button3.setText(Integer.toString(answers.get(3)));

    }
}
